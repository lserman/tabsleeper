// Generated by CoffeeScript 1.6.3
(function() {
  this.Timer = (function() {
    function Timer(hours, minutes) {
      this.hours = hours;
      this.minutes = minutes;
      this.lengthInMilliseconds = ((this.hours * 3600) + (this.minutes * 60)) * 1000;
      this.tab = void 0;
    }

    Timer.prototype.start = function() {
      var that,
        _this = this;
      that = this;
      this.startTime = new Date().getTime();
      return chrome.tabs.query({
        currentWindow: true,
        active: true
      }, function(tabs) {
        _this.tab = new Tab(tabs[0].id);
        return _this.tick();
      });
    };

    Timer.prototype.tick = function() {
      var timeRemaining;
      timeRemaining = this.getTimeRemainingInMilliseconds();
      if (!this.isExpired()) {
        return this.tab.setBadgeText(this.getBadgeText(timeRemaining));
      }
    };

    Timer.prototype.clear = function() {
      return chrome.browserAction.setBadgeText({
        text: ''
      });
    };

    Timer.prototype.stop = function() {
      this.clear();
      return this.tab.close();
    };

    Timer.prototype.isExpired = function() {
      return this.getTimeRemainingInMilliseconds() <= 0;
    };

    Timer.prototype.getTimeRemainingInMilliseconds = function() {
      var timeElapsed;
      timeElapsed = (new Date().getTime()) - this.startTime;
      return this.lengthInMilliseconds - timeElapsed;
    };

    Timer.prototype.getBadgeText = function(milliseconds) {
      var hours, minutes;
      console.log(milliseconds);
      hours = Math.floor(milliseconds / 3600000);
      minutes = this.zeroPad(Math.floor((milliseconds % 3600000) / 60000) + 1);
      return "" + hours + ":" + minutes;
    };

    Timer.prototype.zeroPad = function(string) {
      if (string.toString().length === 1) {
        return "0" + string;
      } else {
        return string;
      }
    };

    return Timer;

  })();

}).call(this);
